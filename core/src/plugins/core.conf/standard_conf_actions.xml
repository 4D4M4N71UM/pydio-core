<?xml version="1.0" encoding="UTF-8"?>
<registry_contributions xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="file:../core.ajaxplorer/ajxp_registry.xsd">
	<actions>
        <action name="get_xml_registry">
            <processing>
                <serverCallback methodName="switchAction"/>
            </processing>
        </action>
        <action name="state">
            <processing>
                <serverCallback methodName="switchAction" restParams="/xPath+" sdkMethodName="getAccountData" developerComment="REST equivalent of the get_xml_registry query, to load some non-workspace-specific data based on a registry xPath. Output format can be sent back in JSON (XML by default).">
                    <input_param name="xPath" type="string" description="Optional xPath to search in registry"/>
                    <input_param name="format" type="string" description="Optional format parameter, xml by default, can be forced to json"/>
                    <output type="JSON|XML" description="Return XML or JSON depending on the format parameter."/>
                </serverCallback>
            </processing>
        </action>
        <action name="user_state">
            <!-- Alias to "state" for API V2 -->
            <processing>
                <serverCallback methodName="switchAction"/>
            </processing>
        </action>
		<action name="switch_repository">
			<processing>
				<serverCallback methodName="switchAction"/>
			</processing>
		</action>
		<action name="load_repository_info">
            <rightsContext adminOnly="false" noUser="true" read="false" userLogged="only" write="false"/>
			<processing>
				<serverCallback methodName="switchAction" restParams="/" developerComment="Retrieve some plugins-contributed info about the workspace (e.g. Quota, Sharing status, etc).">
                    <output type="JSON" description="Array of plugins informations"/>
				</serverCallback>
			</processing>
		</action>
        <action name="user_create_repository">
            <gui text="417" title="418" src="user-create-repository.png" accessKey="" hasAccessKey="false" iconClass="icon-plus-sign">
                <context selection="false" dir="" recycle="true" ajxpWidgets="RepositorySelect"/>
            </gui>
            <rightsContext adminOnly="false" noUser="false" read="false" userLogged="only" write="false"/>
            <processing>
				<clientCallback module="PydioCoreActions.Callbacks.userCreateRepository" prepareModal="true"/>
				<clientForm id="user_create_repository_form"><![CDATA[
					<div id="user_create_repository_form" action="user_create_repository" box_width="420" box_padding="0">
					    <div id="user_tpl_container" style="position:relative;width:418px;overflow:hidden;height:130px;border:1px solid #ddd; background-color: #f4f4f4;">
						<div id="user_templates_selector" style="position:absolute;width:420px;"><div class="panelHeader">AJXP_MESSAGE[419]</div></div>
						<div id="user_template_parameters" style="position:absolute;left:420px;width:420px;">
						    <div id="user_tpl_params_title" class="panelHeader panelHeaderWithIcon"></div>
						    <div style="padding:5px;">
						        <div class="dialogLegend" style="clear:left;">AJXP_MESSAGE[422]</div>
						        <div id="user_tpl_params_parameters"></div>
						    </div>
						</div>
						</div>
					</div>
				]]></clientForm>
                <serverCallback methodName="switchAction"/>
            </processing>
        </action>
		<action name="get_user_templates_definition">
            <rightsContext adminOnly="false" noUser="true" read="false" userLogged="only" write="false"/>
			<processing>
				<serverCallback methodName="switchAction"/>
			</processing>
		</action>
		<action name="get_user_template_logo">
			<processing>
				<serverCallback methodName="switchAction"/>
			</processing>
		</action>
		<action name="user_delete_repository">
            <rightsContext adminOnly="false" noUser="true" read="false" userLogged="only" write="false"/>
			<processing>
				<serverCallback methodName="switchAction"/>
			</processing>
		</action>
		<action name="user_delete_user">
            <rightsContext adminOnly="false" noUser="true" read="false" userLogged="only" write="false"/>
			<processing>
				<serverCallback methodName="switchAction"/>
			</processing>
		</action>
		<action name="get_bookmarks">
            <gui text="145" title="145" src="edit_user.png" iconClass="icon-bookmark" accessKey="" hasAccessKey="false">
                <context selection="false" dir="" recycle="true" actionBar="false" actionBarGroup="filter" contextMenu="false" infoPanel="false"/>
            </gui>
            <rightsContext adminOnly="false" noUser="true" read="false" userLogged="only" write="false"/>
            <processing>
                <serverCallback methodName="switchAction"/>
			</processing>
		</action>
        <action name="get_permissions_mask">
            <rightsContext adminOnly="false" noUser="true" read="false" userLogged="only" write="false"/>
            <processing>
                <serverCallback methodName="publishPermissionsMask" restParams="/" developerComment="Send the permissions mask for the current workspace, if defined."/>
            </processing>
        </action>
		<action name="save_user_pref">
			<processing>
				<serverCallback methodName="switchAction"/>
			</processing>
		</action>
		<action name="get_binary_param" skipSecureToken="true">
			<processing>
				<serverCallback methodName="switchAction"/>
			</processing>
		</action>
		<action name="get_global_binary_param" skipSecureToken="true">
			<processing>
				<serverCallback methodName="switchAction"/>
			</processing>
		</action>
		<action name="store_binary_temp">
            <rightsContext adminOnly="false" noUser="true" read="false" userLogged="only" write="false"/>
			<processing>
				<serverCallback methodName="switchAction"/>
			</processing>
		</action>
        <action name="user_list_authorized_users">
            <rightsContext adminOnly="false" noUser="true" read="false" userLogged="only" write="false"/>
            <processing>
                <serverCallback methodName="switchAction" restParams="/value" developerComment="List users that are visible to the currently logged users">
                    <input_param name="value" type="string" description="Search string: users will be searched starting with this value. Can be empty."/>
                    <input_param name="users_only" type="boolean" description="Whether to return users only or users, groups and roles"/>
                    <input_param name="existing_only" type="boolean" description="If false and value is a non-existing user, will return a Create User ... entry in the list"/>
                    <output type="HTML" description="an UL/LI HTML list of users, groups, roles"/>
                </serverCallback>
            </processing>
        </action>
        <action name="custom_data_edit">
            <gui text="442" title="443" src="edit_user.png" iconClass="icon-reorder" accessKey="" hasAccessKey="false">
                <context selection="false" dir="" recycle="true" actionBar="false" actionBarGroup="utils" contextMenu="false" infoPanel="false"/>
            </gui>
            <rightsContext adminOnly="false" noUser="false" read="false" userLogged="only" write="false"/>
            <processing>
                <serverCallback methodName="switchAction"/>
            </processing>
        </action>
        <action name="user_update_user">
            <gui text="519" title="520" src="edit_user.png" iconClass="icon-user" accessKey="" hasAccessKey="false">
                <context selection="true" dir="" recycle="true" actionBar="true" actionBarGroup="address_book" contextMenu="false" infoPanel="false"/>
                <selectionContext dir="false" file="true" recycle="false" unique="true" allowedMimes="shared_user"/>
            </gui>
            <rightsContext adminOnly="false" noUser="false" read="false" userLogged="only" write="false"/>
            <processing>
                <clientCallback module="PydioCoreActions.Callbacks.userUpdateUser" prepareModal="true"/>
                <serverCallback methodName="switchAction"/>
            </processing>
        </action>
        <action name="user_create_user">
      			<gui text="484" title="485" src="edit_user.png" iconClass="icon-user" accessKey="" hasAccessKey="false">
      				<context selection="false" dir="" recycle="true" actionBar="true" actionBarGroup="address_book" contextMenu="false" infoPanel="false"/>
      			</gui>
                <rightsContext adminOnly="false" noUser="false" read="false" userLogged="only" write="false"/>
            <processing>
                <clientCallback  module="PydioCoreActions.Callbacks.userCreateUser" prepareModal="true">
                </clientCallback>
                <clientForm id="user_create_user"><![CDATA[
                    <div id="user_create_user" action="custom_data_edit" box_width="320">
                    </div>
                ]]></clientForm>
                <serverCallback methodName="switchAction"/>
            </processing>
        </action>
		<action name="switch_language">
			<gui text="190" title="190" src="flag.png" accessKey="" hasAccessKey="false" iconClass="icon-flag">
				<context selection="false" dir="" recycle="true" actionBar="false" actionBarGroup="utils" contextMenu="false" infoPanel="false"/>
			</gui>
			<processing>
				<clientCallback module="PydioCoreActions.Callbacks.switchLanguage" prepareModal="true"/>
				<clientForm id="switch_language_form"><![CDATA[
					<div id="switch_language_form" action="switch_language_form" box_width="320">
					    <div class="dialogLegend"  style="margin-left:50px; font-size: 15px;">AJXP_MESSAGE[190]</div>
						<select id="language_selector" style="margin-left:50px; margin-bottom: 20px;"></select>
					</div>
				]]></clientForm>
				<serverCallback methodName="switchAction"/>
			</processing>
		</action>
		<action name="webdav_preferences">
			<gui text="403" title="403" src="drive_remote.png" iconClass="icon-cog" accessKey="" hasAccessKey="false">
				<context selection="false" dir="" recycle="true" actionBar="false" actionBarGroup="utils" contextMenu="false" infoPanel="false"/>
			</gui>
            <rightsContext noUser="false" userLogged="only" read="true" write="false" adminOnly=""/>
			<processing>
				<serverCallback methodName="switchAction"/>
			</processing>
		</action>
        <action name="switch_to_user_dashboard">
            <gui src="drive_remote.png" text="user_dash.title" title="user_dash.desc" hasAccessKey="false" iconClass="icon-dashboard" >
                <context dir="false" recycle="true" selection="false" actionBar="false" actionBarGroup="utils" ajxpWidgets="UserWidget::logging_string"/>
            </gui>
            <rightsContext adminOnly="false" noUser="false" read="false" userLogged="only" write="false"/>
            <processing>
                <clientCallback module="PydioCoreActions.Navigation.switchToUserDashboard"/>
            </processing>
        </action>
        <action name="switch_to_settings">
            <gui src="drive_remote.png" text="165" title="506" accessKey="settings_access_key" hasAccessKey="true" iconClass="icon-cogs" >
                <context dir="false" recycle="true" selection="false" actionBar="true" actionBarGroup="utils" ajxpWidgets="UserWidget::logging_string"/>
            </gui>
            <rightsContext adminOnly="true" noUser="true" read="false" userLogged="only" write="false"/>
            <processing>
                <clientCallback module="PydioCoreActions.Navigation.switchToSettings"/>
            </processing>
        </action>
	</actions>
    <client_configs>
        <component_config className="AjxpTabulator::userdashboard_main_tab">
            <additional_tab id="webdav_pane"
                            tabInfo='{"id":"webdav","iconClass":"icon-cog","element":"webdav_pane","closeable":false,"label":"403","title":"403","dontFocus":true,"position":3}'
                            paneInfo='{"type":"widget"}'><![CDATA[
                <div id="webdav_pane" ajxpClass="AjxpReactComponent" class="tabbed_editor" ajxpOptions='{"componentNamespace":"UserAccount","componentName":"WebDAVPane"}'></div>
                ]]></additional_tab>
        </component_config>
        <component_config className="InfoPanel">
            <infoPanelExtension mime="ajxp_root_node" attributes="">
                <messages>
                    <message key="shared_string" id="527"/>
                    <message key="internal_string" id="531"/>
                    <message key="external_string" id="532"/>
                </messages>
                <html><![CDATA[
                    <div id="ajxp_workspace_info_panel" data-infoPanelPosition="top" style="margin:6px 20px;">
                        <div class="panelHeader">#{shared_string}</div>
                        <div id="ajxp_workspace_info_panel_content"></div>
                        <script>
                            if(pydio.user) {
                                var cacheService = MetaCacheService.getInstance();
                                cacheService.registerMetaStream('workspace.info', 'MANUAL_TRIGGER');
                                var render = function(data){
                                    $('ajxp_workspace_info_panel_content').update('#{internal_string}: ' + data['core.users']['users'] + ' <br/> #{external_string}: ' + data['core.users']['groups']);
                                };
                                var repoKey = pydio.user.getActiveRepository();
                                if(cacheService.hasKey('workspace.info', repoKey)){
                                    render(cacheService.getByKey('workspace.info', repoKey));
                                }else{
                                    FuncUtils.bufferCallback("ajxp_load_repo_info_timer", 300,function(){
                                        if(!$('ajxp_workspace_info_panel_content') || !$('ajxp_workspace_info_panel_content').visible()){
                                            return;
                                        }
                                        $("ajxp_workspace_info_panel").addClassName("infopanel_loading");
                                        PydioApi.getClient().request({get_action:'load_repository_info'}, function(transport){
                                            $("ajxp_workspace_info_panel").addClassName("infopanel_loading_finished");
                                            if(transport.responseJSON && $('ajxp_workspace_info_panel_content')){
                                                var data = transport.responseJSON;
                                                if(!data['core.users']['groups']){
                                                    data['core.users']['groups'] = 0;
                                                }
                                            }
                                            cacheService.setKey('workspace.info', repoKey, data);
                                            render(data);
                                        }, null, {discrete:true});
                                    });
                                }
                            }

                        </script>
                    </div>
                ]]></html>
            </infoPanelExtension>
        </component_config>
    </client_configs>
</registry_contributions>
